kind: Environment
name: preview
type: primary
urlHandle: 38mekq
components:
    -
        kind: Application
        name: devopsapp
        gitRepo: 'https://github.com/DylanvandeLaar/dylan-devops-2223.git'
        gitBranch: main
        gitApplicationPath: DevopsApp
        dockerCompose:
            build:
                context: ./DevopsApp
                dockerfile: Dockerfile
            command:
                - npm
                - run
                - dev
            deploy: {  }
            environment:
                MESSAGE_QUEUE: 'amqp://messagebus'
                MONGO_URL: 'mongodb://devopsAppDB:27017'
                PORT: '5000'
            ports:
                - '5000:5000'
        hosts:
            -
                hostname: 'devopsapp-{{ env.base_domain }}'
                path: /
                servicePort: 5000
    -
        kind: Database
        name: devopsappdb
        dockerCompose:
            image: 'mongo:latest'
            ports:
                - '27020:27017'
    -
        kind: Application
        name: grafana
        gitRepo: 'https://github.com/DylanvandeLaar/dylan-devops-2223.git'
        gitBranch: main
        gitApplicationPath: grafana
        dockerCompose:
            build:
                context: ./grafana
                dockerfile: Dockerfile
            ports:
                - '3000:3000'
        hosts:
            -
                hostname: 'grafana-{{ env.base_domain }}'
                path: /
                servicePort: 3000
    -
        kind: Application
        name: loggingapi
        gitRepo: 'https://github.com/DylanvandeLaar/dylan-devops-2223.git'
        gitBranch: main
        gitApplicationPath: LoggingAPI
        dockerCompose:
            build:
                context: ./LoggingAPI
                dockerfile: Dockerfile
            command:
                - npm
                - start
            deploy: {  }
            environment:
                MESSAGE_QUEUE: 'amqp://messagebus'
                MONGO_URL: 'mongodb://loggingdb:27017'
                PORT: '5030'
            ports:
                - '5030:5030'
        hosts:
            -
                hostname: 'loggingapi-{{ env.base_domain }}'
                path: /
                servicePort: 5030
    -
        kind: Database
        name: loggingdb
        dockerCompose:
            image: 'mongo:latest'
            ports:
                - '27030:27017'
    -
        kind: Service
        name: messagebus
        dockerCompose:
            healthcheck:
                test:
                    - CMD-SHELL
                    - 'rabbitmq-diagnostics -q ping'
                timeout: 5s
                interval: 5s
                retries: 5
            image: 'rabbitmq:latest'
            ports:
                - '4369:4369'
                - '5671:5671'
                - '5672:5672'
                - '25672:25672'
                - '15671:15671'
                - '15672:15672'
        hosts:
            -
                hostname: 'messagebus-{{ env.base_domain }}'
                path: /
                servicePort: 4369
    -
        kind: Service
        name: prometheus
        dockerCompose:
            command:
                - '--web.enable-lifecycle'
                - '--config.file=/etc/prometheus/prometheus.yml'
            image: 'prom/prometheus:latest'
            ports:
                - '9090:9090'
        hosts:
            -
                hostname: 'prometheus-{{ env.base_domain }}'
                path: /
                servicePort: 9090
        volumes:
            -
                name: prometheus-data
                mount: /prometheus
                subPath: ''
volumes:
    -
        name: prometheus-data
        size: 1Gi
        type: disk
